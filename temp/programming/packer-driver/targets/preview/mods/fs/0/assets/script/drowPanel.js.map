{"version":3,"sources":["file:///Users/qinyafei/myPrograme/myGithub/graphicsDemo2/GraphicsDemo/assets/script/drowPanel.ts"],"names":["_decorator","Component","Node","Color","GraphicsCtrl","ccclass","property","drowPanel","start","gpCtrl","node","getChildByName","getComponent","touchMngNode","widthMngNode","initEvent","setLineWidth","setLineColor","children","forEach","nd","i","on","EventType","TOUCH_START","parent","position","colorData","widthNum","close","removeAllLine","claerAllRecoverList","active"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, color, Color } from 'cc';\r\nimport { GraphicsCtrl } from './graphicsCtrl';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = NewComponent\r\n * DateTime = Thu Nov 25 2021 16:30:10 GMT+0800 (中国标准时间)\r\n * Author = ChinaQin\r\n * FileBasename = NewComponent.ts\r\n * FileBasenameNoExtension = NewComponent\r\n * URL = db://assets/script/NewComponent.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\r\n *\r\n */\r\n\r\n@ccclass('drowPanel')\r\nexport class drowPanel extends Component {\r\n    public static gpCtrl: GraphicsCtrl = null;\r\n    private touchMngNode: Node = null;\r\n    private widthMngNode: Node = null;\r\n    start() {\r\n        drowPanel.gpCtrl = this.node.getChildByName(\"gpCtrl\").getComponent(GraphicsCtrl);\r\n\r\n        this.touchMngNode = this.node.getChildByName(\"menu\").getChildByName(\"colorCtrl\").getChildByName(\"touchMng\");\r\n        this.widthMngNode = this.node.getChildByName(\"menu\").getChildByName(\"widthCtrl\").getChildByName(\"touchMng\");\r\n        this.initEvent();\r\n\r\n        drowPanel.gpCtrl.setLineWidth(6);\r\n        drowPanel.gpCtrl.setLineColor(new Color(250, 174, 132));\r\n    }\r\n\r\n    initEvent(): void {\r\n        this.touchMngNode.children.forEach((nd: Node, i: number) => {\r\n            nd.on(Node.EventType.TOUCH_START, () => {\r\n                nd.parent.parent.getChildByName(\"select\").position = nd.position;\r\n                let colorData = null;\r\n                switch (i) {\r\n                    case 0:\r\n                        colorData = new Color(250, 174, 132);\r\n                        break;\r\n\r\n                    case 1:\r\n                        colorData = new Color(245, 255, 0);\r\n                        break;\r\n\r\n                    case 2:\r\n                        colorData = new Color(118, 255, 65);\r\n                        break;\r\n\r\n                    case 3:\r\n                        colorData = new Color(247, 39, 39);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                drowPanel.gpCtrl.setLineColor(colorData);\r\n            }, this)\r\n        })\r\n\r\n        this.widthMngNode.children.forEach((nd: Node, i: number) => {\r\n            nd.on(Node.EventType.TOUCH_START, () => {\r\n                nd.parent.parent.getChildByName(\"select\").position = nd.position;\r\n                let widthNum = 10;\r\n                switch (i) {\r\n                    case 0:\r\n                        widthNum = 6;\r\n                        break;\r\n\r\n                    case 1:\r\n                        widthNum = 8;\r\n                        break;\r\n\r\n                    case 2:\r\n                        widthNum = 10;\r\n                        break;\r\n\r\n                    case 3:\r\n                        widthNum = 12;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                drowPanel.gpCtrl.setLineWidth(widthNum);\r\n            }, this)\r\n        })\r\n    }\r\n\r\n    close() {\r\n        // 清空线段\r\n        drowPanel.gpCtrl.removeAllLine();\r\n        // 清空恢复数据\r\n        drowPanel.gpCtrl.claerAllRecoverList();\r\n        this.node.active = false\r\n    }\r\n}\r\n\r\n"]}