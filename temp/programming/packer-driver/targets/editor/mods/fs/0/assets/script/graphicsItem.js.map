{"version":3,"sources":["file:///Users/qinyafei/myPrograme/myGithub/graphicsDemo2/GraphicsDemo/assets/script/graphicsItem.ts"],"names":["_decorator","Component","Graphics","ccclass","property","GraphicsItem","init","data","clearPaths","selfGP","node","getComponent","actionId","id","lineWidth","width","strokeColor","linesPaths","startLine","pos","moveTo","x","y","push","drawLine","lineTo","stroke","fill","clearline","clear","getActionId","getRecoverLineData","rData","paths","siblingIndex","getSiblingIndex","recoverLine","setSiblingIndex","forEach","index"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Color, Vec3, Graphics, UITransform } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * 线的数据类型,包含以下数据: \r\n */\r\nexport interface LineData {\r\n    /**\r\n     * 画笔颜色\r\n     */\r\n    strokeColor: Color,\r\n\r\n    /**\r\n     * 宽度\r\n     */\r\n    width: number,\r\n\r\n    /**\r\n     * 笔画Id\r\n     */\r\n    id: number\r\n}\r\n\r\n/**\r\n * 恢复线段需要的数据\r\n */\r\nexport interface RecoverLineData extends LineData {\r\n    /**\r\n     * 划线路径\r\n     */\r\n    paths: Vec3[],\r\n\r\n    /**\r\n     * 在父节点下,显示位置,用于维护层级\r\n     */\r\n    siblingIndex: number\r\n}\r\n\r\n\r\n/**\r\n * Predefined variables\r\n * Name = GraphicsItem\r\n * DateTime = Wed Nov 24 2021 17:00:37 GMT+0800 (中国标准时间)\r\n * Author = ChinaQin\r\n * FileBasename = graphicsItem.ts\r\n * FileBasenameNoExtension = graphicsItem\r\n * URL = db://assets/script/graphicsItem.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\r\n *\r\n */\r\n\r\n@ccclass('GraphicsItem')\r\nexport class GraphicsItem extends Component {\r\n    actionId: number = -1;\r\n    selfGP: Graphics = null;\r\n    linesPaths: Vec3[] = [];\r\n\r\n    /**\r\n     * 初始化\r\n     * @param data \r\n     */\r\n    public init(data: LineData): void {\r\n        this.clearPaths();\r\n\r\n        this.selfGP = this.node.getComponent(Graphics);\r\n        this.actionId = data.id;\r\n        this.selfGP.lineWidth = data.width;\r\n        this.selfGP.strokeColor = data.strokeColor;\r\n    }\r\n\r\n    /**\r\n     * 清空路径\r\n     */\r\n    private clearPaths(): void {\r\n        this.linesPaths = [];\r\n    }\r\n\r\n    /**\r\n     * 触摸开始时调用\r\n     * @param pos \r\n     */\r\n    public startLine(pos: Vec3): void {\r\n        this.selfGP.moveTo(pos.x, pos.y);\r\n        this.linesPaths.push(pos);\r\n    }\r\n\r\n    /**\r\n     * 划线\r\n     * @param pos \r\n     */\r\n    public drawLine(pos: Vec3): void {\r\n        // 上一次划线的位置\r\n        this.selfGP.lineTo(pos.x, pos.y);\r\n        this.selfGP.stroke();\r\n        this.selfGP.fill();\r\n        this.selfGP.moveTo(pos.x, pos.y);\r\n        this.linesPaths.push(pos);\r\n    }\r\n\r\n    /**\r\n     * 清空绘制\r\n     */\r\n    public clearline(): void {\r\n        this.selfGP.clear();\r\n    }\r\n\r\n    /**\r\n     * actionId 获取动作id\r\n     * @returns \r\n     */\r\n    public getActionId(): number {\r\n        return this.actionId;\r\n    }\r\n\r\n    /**\r\n     * 获取恢复线段数据\r\n     * @returns \r\n     */\r\n    public getRecoverLineData(): RecoverLineData {\r\n        const rData: RecoverLineData = {\r\n            strokeColor: this.selfGP.strokeColor,\r\n            paths: this.linesPaths,\r\n            siblingIndex: this.node.getSiblingIndex(),\r\n            id: this.actionId,\r\n            width: this.selfGP.lineWidth\r\n        }\r\n         \r\n        return rData;\r\n    }\r\n\r\n    /**\r\n     * 恢复线段\r\n     * @param rData \r\n     */\r\n    public recoverLine(rData: RecoverLineData): void {\r\n        this.actionId = rData.id;\r\n        this.selfGP.strokeColor = rData.strokeColor;\r\n        this.selfGP.lineWidth = rData.width;\r\n        // this.linesPaths = rData.paths;\r\n        this.node.setSiblingIndex(rData.siblingIndex);\r\n\r\n        rData.paths.forEach((pos: Vec3, index: number) => {\r\n            if (index === 0) {\r\n                this.startLine(pos);\r\n            } else {\r\n                this.drawLine(pos)\r\n            }\r\n        }) \r\n    }\r\n}"]}