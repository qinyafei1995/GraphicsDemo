{"version":3,"sources":["file:///Users/qinyafei/myPrograme/myGithub/graphicsDemo2/GraphicsDemo/assets/script/graphicsCtrl.ts"],"names":["_decorator","Component","Node","UITransform","v3","color","Prefab","instantiate","GraphicsItem","ccclass","property","GraphicsCtrl","start","init","initEvent","selfTransform","node","getComponent","touchNode","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","event","uiPos","getUILocation","locPos","convertToNodeSpaceAR","x","y","addActionIdToList","addLine","curGpItem","startLine","drawLine","curActionID","Date","getTime","actionIDList","push","data","strokeColor","curColor","width","curWidth","id","nd","linePfb","lineMng","addChild","setLineWidth","num","setLineColor","clr","removeOneLine","lastID","pop","children","forEach","itemCom","console","log","getActionId","allRecoverLineData","getRecoverLineData","clearline","destroy","removeAllLine","unshift","recoverOneLine","length","rData","recoverLine","recoverAllLine","claerAllRecoverList"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Graphics, EventTouch, Vec3, Color, UITransform, Vec2, v3, color, Prefab, instantiate, sp } from 'cc';\r\nimport { GraphicsItem, LineData, RecoverLineData } from './graphicsItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = Graphics\r\n * DateTime = Wed Nov 24 2021 16:25:20 GMT+0800 (中国标准时间)\r\n * Author = ChinaQin\r\n * FileBasename = graphics.ts\r\n * FileBasenameNoExtension = graphics\r\n * URL = db://assets/script/graphics.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\r\n *\r\n */\r\n\r\n@ccclass('GraphicsCtrl')\r\nexport class GraphicsCtrl extends Component {\r\n    @property(Node)\r\n    touchNode: Node = null;\r\n\r\n    @property(Prefab)\r\n    linePfb: Prefab = null;\r\n\r\n    @property(Node)\r\n    lineMng: Node = null;\r\n\r\n    /**\r\n     * 动作id. 用于判定是第几次画图\r\n     */\r\n    private actionID: number = 0;\r\n    private actionIDList: number[] = [];\r\n    private curActionID: number = null;\r\n    /**\r\n     * 当前颜色\r\n     */\r\n    private curColor: Color = color(255, 255, 0);\r\n\r\n    /**\r\n     * 当前画笔宽度\r\n     */\r\n    private curWidth: number = 6;\r\n\r\n    /**\r\n     * 当前划线节点组件\r\n     */\r\n    private curGpItem: GraphicsItem = null;\r\n\r\n    private allRecoverLineData: RecoverLineData[] = [];\r\n\r\n    selfTransform: UITransform = null;\r\n    start() {\r\n        this.init();\r\n        this.initEvent();\r\n    }\r\n\r\n    private init(): void {\r\n        this.selfTransform = this.node.getComponent(UITransform);\r\n    }\r\n\r\n    private initEvent(): void {\r\n        this.touchNode.on(Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.touchNode.on(Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n    }\r\n\r\n    //#region 触摸逻辑\r\n    private touchStart(event: EventTouch): void {\r\n        const uiPos: Vec2 = event.getUILocation();\r\n        const locPos: Vec3 = this.selfTransform.convertToNodeSpaceAR(v3(uiPos.x, uiPos.y));\r\n        this.addActionIdToList();\r\n        this.addLine();\r\n        this.curGpItem.startLine(locPos);\r\n    }\r\n\r\n    private touchMove(event: EventTouch): void {\r\n        const uiPos: Vec2 = event.getUILocation();\r\n        const locPos: Vec3 = this.selfTransform.convertToNodeSpaceAR(v3(uiPos.x, uiPos.y));\r\n        this.curGpItem.drawLine(locPos);\r\n    }\r\n    //#endregion\r\n\r\n    //#region \r\n    private addActionIdToList(): void {\r\n        this.curActionID = new Date().getTime();\r\n        this.actionIDList.push(this.curActionID);\r\n    }\r\n    //#endregion\r\n\r\n    /**\r\n     * 添加线段\r\n     */\r\n    private addLine(): void {   \r\n        const data: LineData = {\r\n            strokeColor: this.curColor,\r\n            width: this.curWidth,\r\n            id: this.curActionID\r\n        }\r\n        const nd = instantiate(this.linePfb);\r\n\r\n        this.lineMng.addChild(nd);\r\n        this.curGpItem = nd.getComponent(GraphicsItem);\r\n        this.curGpItem.init(data);\r\n    }\r\n\r\n    /**\r\n     * 设置线条宽度 \r\n     * @param num \r\n     */\r\n    public setLineWidth(num: number): void {\r\n        this.curWidth = num;\r\n    }\r\n\r\n    /**\r\n     * 设置线条颜色\r\n     * @param clr 颜色\r\n     */\r\n    public setLineColor(clr: Color): void {\r\n        this.curColor = clr;\r\n    }\r\n\r\n    /**\r\n     * 清除上一条线\r\n     */\r\n    public removeOneLine(): void {\r\n        const lastID = this.actionIDList.pop();\r\n        \r\n        this.lineMng.children.forEach((nd: Node) => {\r\n            const itemCom: GraphicsItem = nd.getComponent(GraphicsItem);\r\n            console.log(\"last id\", lastID, \"get action id\", itemCom.getActionId());\r\n            if (itemCom.getActionId() === lastID) {\r\n                this.allRecoverLineData.push(itemCom.getRecoverLineData());\r\n                itemCom.clearline();\r\n                nd.destroy();\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 清除所有线段, 不可进行数据恢复\r\n     */\r\n    public removeAllLine(): void {\r\n        this.actionIDList = [];\r\n        this.lineMng.children.forEach((nd: Node) => {\r\n            const itemCom: GraphicsItem = nd.getComponent(GraphicsItem);\r\n            this.allRecoverLineData.unshift(itemCom.getRecoverLineData());\r\n            itemCom.clearline();\r\n            nd.destroy();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 恢复一条线段\r\n     */\r\n    public recoverOneLine(): void {\r\n        if (this.allRecoverLineData.length >= 1) {\r\n            const rData = this.allRecoverLineData.pop();\r\n            this.actionIDList.push(rData.id);\r\n            this.addLine();\r\n            this.curGpItem.recoverLine(rData);\r\n        } else {\r\n            console.log(\"没有恢复的数据了\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 恢复所有线段\r\n     */\r\n    public recoverAllLine(): void {\r\n        if (this.allRecoverLineData.length >= 1) {\r\n            const rData = this.allRecoverLineData.pop();\r\n            this.actionIDList.push(rData.id);\r\n            this.addLine();\r\n            this.curGpItem.recoverLine(rData);\r\n\r\n            this.recoverAllLine();\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清空恢复数据, 关闭页面, 重新打开时调用\r\n     */\r\n    public claerAllRecoverList(): void {\r\n        this.allRecoverLineData = [];\r\n    }\r\n}"]}